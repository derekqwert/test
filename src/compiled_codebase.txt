 
--- Start of D:\Proj\react-table\src\App.css --- 
.App {
  text-align: center;
  height: 100vh;
  background-color: #bde0fe;
}

.heading {
  font-family: Delius;
  font-size: 2.8em;
  padding: 2vh 0;
} 
--- End of D:\Proj\react-table\src\App.css --- 
 
--- Start of D:\Proj\react-table\src\App.js --- 
import './App.css';
import ListTable from './components/ListTable';

function App() {
  return (
    <div className="App">
      <h2 className='heading'>Sagnik Store</h2>
      <ListTable />
    </div>
  );
}

export default App;
 
--- End of D:\Proj\react-table\src\App.js --- 
 
--- Start of D:\Proj\react-table\src\App.test.js --- 
import { render, screen } from '@testing-library/react';
import App from './App';

test('renders learn react link', () => {
  render(<App />);
  const linkElement = screen.getByText(/learn react/i);
  expect(linkElement).toBeInTheDocument();
});
 
--- End of D:\Proj\react-table\src\App.test.js --- 
 
--- Start of D:\Proj\react-table\src\compiled_codebase.txt --- 
 
--- Start of D:\Proj\react-table\src\App.css --- 
.App {
  text-align: center;
  height: 100vh;
  background-color: #bde0fe;
}

.heading {
  font-family: Delius;
  font-size: 2.8em;
  padding: 2vh 0;
} 
--- End of D:\Proj\react-table\src\App.css --- 
 
--- Start of D:\Proj\react-table\src\App.js --- 
import './App.css';
import ListTable from './components/ListTable';

function App() {
  return (
    <div className="App">
      <h2 className='heading'>Sagnik Store</h2>
      <ListTable />
    </div>
  );
}

export default App;
 
--- End of D:\Proj\react-table\src\App.js --- 
 
--- Start of D:\Proj\react-table\src\App.test.js --- 
import { render, screen } from '@testing-library/react';
import App from './App';

test('renders learn react link', () => {
  render(<App />);
  const linkElement = screen.getByText(/learn react/i);
  expect(linkElement).toBeInTheDocument();
});
 
--- End of D:\Proj\react-table\src\App.test.js --- 
 
--- Start of D:\Proj\react-table\src\compiled_codebase.txt --- 
 
-- 
--- End of D:\Proj\react-table\src\compiled_codebase.txt --- 
 
--- Start of D:\Proj\react-table\src\index.css --- 
body {
  margin: 0;
  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',
    'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',
    sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

code {
  font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New',
    monospace;
}
 
--- End of D:\Proj\react-table\src\index.css --- 
 
--- Start of D:\Proj\react-table\src\index.js --- 
import React from 'react';
import ReactDOM from 'react-dom/client';
import './index.css';
import 'bootstrap/dist/css/bootstrap.min.css'
import App from './App';

const root = ReactDOM.createRoot(document.getElementById('root'));
root.render(
  <React.StrictMode>
    <App />
  </React.StrictMode>
);
 
--- End of D:\Proj\react-table\src\index.js --- 
 
--- Start of D:\Proj\react-table\src\logo.svg --- 
<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 841.9 595.3"><g fill="#61DAFB"><path d="M666.3 296.5c0-32.5-40.7-63.3-103.1-82.4 14.4-63.6 8-114.2-20.2-130.4-6.5-3.8-14.1-5.6-22.4-5.6v22.3c4.6 0 8.3.9 11.4 2.6 13.6 7.8 19.5 37.5 14.9 75.7-1.1 9.4-2.9 19.3-5.1 29.4-19.6-4.8-41-8.5-63.5-10.9-13.5-18.5-27.5-35.3-41.6-50 32.6-30.3 63.2-46.9 84-46.9V78c-27.5 0-63.5 19.6-99.9 53.6-36.4-33.8-72.4-53.2-99.9-53.2v22.3c20.7 0 51.4 16.5 84 46.6-14 14.7-28 31.4-41.3 49.9-22.6 2.4-44 6.1-63.6 11-2.3-10-4-19.7-5.2-29-4.7-38.2 1.1-67.9 14.6-75.8 3-1.8 6.9-2.6 11.5-2.6V78.5c-8.4 0-16 1.8-22.6 5.6-28.1 16.2-34.4 66.7-19.9 130.1-62.2 19.2-102.7 49.9-102.7 82.3 0 32.5 40.7 63.3 103.1 82.4-14.4 63.6-8 114.2 20.2 130.4 6.5 3.8 14.1 5.6 22.5 5.6 27.5 0 63.5-19.6 99.9-53.6 36.4 33.8 72.4 53.2 99.9 53.2 8.4 0 16-1.8 22.6-5.6 28.1-16.2 34.4-66.7 19.9-130.1 62-19.1 102.5-49.9 102.5-82.3zm-130.2-66.7c-3.7 12.9-8.3 26.2-13.5 39.5-4.1-8-8.4-16-13.1-24-4.6-8-9.5-15.8-14.4-23.4 14.2 2.1 27.9 4.7 41 7.9zm-45.8 106.5c-7.8 13.5-15.8 26.3-24.1 38.2-14.9 1.3-30 2-45.2 2-15.1 0-30.2-.7-45-1.9-8.3-11.9-16.4-24.6-24.2-38-7.6-13.1-14.5-26.4-20.8-39.8 6.2-13.4 13.2-26.8 20.7-39.9 7.8-13.5 15.8-26.3 24.1-38.2 14.9-1.3 30-2 45.2-2 15.1 0 30.2.7 45 1.9 8.3 11.9 16.4 24.6 24.2 38 7.6 13.1 14.5 26.4 20.8 39.8-6.3 13.4-13.2 26.8-20.7 39.9zm32.3-13c5.4 13.4 10 26.8 13.8 39.8-13.1 3.2-26.9 5.9-41.2 8 4.9-7.7 9.8-15.6 14.4-23.7 4.6-8 8.9-16.1 13-24.1zM421.2 430c-9.3-9.6-18.6-20.3-27.8-32 9 .4 18.2.7 27.5.7 9.4 0 18.7-.2 27.8-.7-9 11.7-18.3 22.4-27.5 32zm-74.4-58.9c-14.2-2.1-27.9-4.7-41-7.9 3.7-12.9 8.3-26.2 13.5-39.5 4.1 8 8.4 16 13.1 24 4.7 8 9.5 15.8 14.4 23.4zM420.7 163c9.3 9.6 18.6 20.3 27.8 32-9-.4-18.2-.7-27.5-.7-9.4 0-18.7.2-27.8.7 9-11.7 18.3-22.4 27.5-32zm-74 58.9c-4.9 7.7-9.8 15.6-14.4 23.7-4.6 8-8.9 16-13 24-5.4-13.4-10-26.8-13.8-39.8 13.1-3.1 26.9-5.8 41.2-7.9zm-90.5 125.2c-35.4-15.1-58.3-34.9-58.3-50.6 0-15.7 22.9-35.6 58.3-50.6 8.6-3.7 18-7 27.7-10.1 5.7 19.6 13.2 40 22.5 60.9-9.2 20.8-16.6 41.1-22.2 60.6-9.9-3.1-19.3-6.5-28-10.2zM310 490c-13.6-7.8-19.5-37.5-14.9-75.7 1.1-9.4 2.9-19.3 5.1-29.4 19.6 4.8 41 8.5 63.5 10.9 13.5 18.5 27.5 35.3 41.6 50-32.6 30.3-63.2 46.9-84 46.9-4.5-.1-8.3-1-11.3-2.7zm237.2-76.2c4.7 38.2-1.1 67.9-14.6 75.8-3 1.8-6.9 2.6-11.5 2.6-20.7 0-51.4-16.5-84-46.6 14-14.7 28-31.4 41.3-49.9 22.6-2.4 44-6.1 63.6-11 2.3 10.1 4.1 19.8 5.2 29.1zm38.5-66.7c-8.6 3.7-18 7-27.7 10.1-5.7-19.6-13.2-40-22.5-60.9 9.2-20.8 16.6-41.1 22.2-60.6 9.9 3.1 19.3 6.5 28.1 10.2 35.4 15.1 58.3 34.9 58.3 50.6-.1 15.7-23 35.6-58.4 50.6zM320.8 78.4z"/><circle cx="420.9" cy="296.5" r="45.7"/><path d="M520.5 78.1z"/></g></svg> 
--- End of D:\Proj\react-table\src\logo.svg --- 
 
--- Start of D:\Proj\react-table\src\new.bat --- 
@echo off

:: Output file name
set OUTPUT_FILE=compiled_codebase.txt

:: Directory to scan (use . for the current directory)
set DIRECTORY=.

:: Clear the output file if it exists
echo. > %OUTPUT_FILE%

echo Compiling code files into %OUTPUT_FILE%...

:: Loop through all files recursively in the directory
for /r "%DIRECTORY%" %%I in (*) do (
    if exist "%%I" (
        echo --- Start of %%I --- >> %OUTPUT_FILE%
        type "%%I" >> %OUTPUT_FILE%
        echo. >> %OUTPUT_FILE%
        echo --- End of %%I --- >> %OUTPUT_FILE%
        echo. >> %OUTPUT_FILE%
    ) else (
        echo Skipped: %%I (file not found)
    )
)

echo Compilation complete! Output saved to %OUTPUT_FILE%.
 
--- End of D:\Proj\react-table\src\new.bat --- 
 
--- Start of D:\Proj\react-table\src\setupTests.js --- 
// jest-dom adds custom jest matchers for asserting on DOM nodes.
// allows you to do things like:
// expect(element).toHaveTextContent(/react/i)
// learn more: https://github.com/testing-library/jest-dom
import '@testing-library/jest-dom';
 
--- End of D:\Proj\react-table\src\setupTests.js --- 
 
--- Start of D:\Proj\react-table\src\components\ItemCount.jsx --- 
import React, { useReducer } from "react";
import { Button } from "react-bootstrap";

const initialState = 0;

const itemCountReducer = (state, action) => {
  switch (action.type) {
    case "increment":
      return state + 1;
    case "decrement":
      return state > 0 ? state - 1 : state;
    default:
      return state;
  }
};

const ItemCount = ({ onCountChange }) => {
  const [itemCount, dispatch] = useReducer(itemCountReducer, initialState);

  const handleCountChange = (type) => {
    const newCount =
      type === "increment" ? itemCount + 1 : Math.max(itemCount - 1, 0);
    dispatch({ type });
    onCountChange(newCount);
  };

  return (
    <div style={{ display: "flex", alignItems: "center", gap: "0.5rem" }}>
      <Button variant="success" onClick={() => handleCountChange("increment")}>
        +
      </Button>
      <span>{itemCount}</span>
      <Button variant="danger" onClick={() => handleCountChange("decrement")}>
        -
      </Button>
    </div>
  );
};

export default ItemCount;
 
--- End of D:\Proj\react-table\src\components\ItemCount.jsx --- 
 
--- Start of D:\Proj\react-table\src\components\ListTable.jsx --- 
import React, { useState, useEffect } from "react";
import axios from "axios";
import "../styles/ListTable.css";
import { Button, Table } from "react-bootstrap";
import { ToastContainer, toast } from "react-toastify";
import "react-toastify/dist/ReactToastify.css";
import ItemCount from "./ItemCount";

const ListTable = () => {
  const [storeData, setStoreData] = useState([]);
  const [itemCounts, setItemCounts] = useState({});

  useEffect(() => {
    displayData();
  }, []);

  const displayData = () => {
    axios
      .get("https://fakestoreapi.com/products?limit=5")
      .then((response) => {
        setStoreData(response.data);
        const initialCounts = response.data.reduce((acc, product) => {
          acc[product.id] = 0;
          return acc;
        }, {});
        setItemCounts(initialCounts);
      })
      .catch((error) => console.error(error));
  };

  const handleItemCountChange = (productId, count) => {
    setItemCounts((prevCounts) => ({ ...prevCounts, [productId]: count }));
  };

  const addToCart = (product) => {
    const count = itemCounts[product.id] || 0;
    if (count > 0) {
      toast.success(`Added ${count}x "${product.title}" to cart`, {
        position: "bottom-right",
        autoClose: 3000,
      });
    } else {
      toast.warning("Please select a quantity before adding to cart.", {
        position: "bottom-right",
        autoClose: 3000,
      });
    }
  };

  return (
    <div className="container">
      <Table className="table" striped bordered hover>
        <thead>
          <tr>
            <th>Select</th>
            <th>Name</th>
            <th>Price</th>
            <th>Image</th>
            <th>Quantity</th>
            <th>Add to Cart</th>
          </tr>
        </thead>
        <tbody>
          {storeData.map((product) => (
            <tr key={product.id}>
              <td>
                <input type="checkbox" />
              </td>
              <td>{product.title}</td>
              <td>{product.price}</td>
              <td>
                <img
                  className="product-image"
                  src={product.image}
                  alt={product.title}
                />
              </td>
              <td>
                <ItemCount
                  onCountChange={(count) => handleItemCountChange(product.id, count)}
                />
              </td>
              <td>
                <Button
                  variant="primary"
                  onClick={() => addToCart(product)}
                >
                  Add
                </Button>
              </td>
            </tr>
          ))}
        </tbody>
      </Table>
      <ToastContainer />
    </div>
  );
};

export default ListTable;
 
--- End of D:\Proj\react-table\src\components\ListTable.jsx --- 
 
--- Start of D:\Proj\react-table\src\styles\ListTable.css --- 
.container {
    padding: 0 10vw;
    font-family: Abel;
  }
  
  /* .table {
    border-collapse: collapse;
    width: 100%;
  }
  
  .table th,
  .table td {
    border: 1px solid black;
    padding: 8px;
  } */
  
  .table th {
    background-color: #2196e4;
  }
  
  /* .table tr:nth-child(even) {
    background-color: #fff;
  }
  
  .table tr:nth-child(odd) {
    background-color: #d0e4f5;
  } */
  
  .product-image {
    height: 75px;
    mix-blend-mode: multiply;
  }
  
  .product-image {
    transition: transform .5s ease;
  }
  
  .product-image:hover {
    transform: scale(1.5);
  }
  
  .cart-button {
    width: 5vw;
  } 
--- End of D:\Proj\react-table\src\styles\ListTable.css --- 
 
